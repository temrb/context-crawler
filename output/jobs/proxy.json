[
  {
    "title": "Getting Started: Proxy | Next.js",
    "url": "https://nextjs.org/docs/app/getting-started/proxy",
    "html": "App Router\nGetting Started\nProxy\nCopy page\nProxy\nProxy\n\nProxy allows you to run code before a request is completed. Then, based on the incoming request, you can modify the response by rewriting, redirecting, modifying the request or response headers, or responding directly.\n\nUse cases\n\nSome common scenarios where Proxy is effective include:\n\nQuick redirects after reading parts of the incoming request\nRewriting to different pages based on A/B tests or experiments\nModifying headers for all pages or a subset of pages\n\nProxy is not a good fit for:\n\nSlow data fetching\nSession management\n\nUsing fetch with options.cache, options.next.revalidate, or options.next.tags, has no effect in Proxy.\n\nConvention\n\nCreate a proxy.ts (or .js) file in the project root, or inside src if applicable, so that it is located at the same level as pages or app.\n\nNote: While only one proxy.ts file is supported per project, you can still organize your proxy logic into modules. Break out proxy functionalities into separate .ts or .js files and import them into your main proxy.ts file. This allows for cleaner management of route-specific proxy, aggregated in the proxy.ts for centralized control. By enforcing a single proxy file, it simplifies configuration, prevents potential conflicts, and optimizes performance by avoiding multiple proxy layers.\n\nExample\nproxy.ts\nTypeScript\nJavaScript\nTypeScript\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n \n// This function can be marked `async` if using `await` inside\nexport function proxy(request: NextRequest) {\n  return NextResponse.redirect(new URL('/home', request.url))\n}\n \n// See \"Matching Paths\" below to learn more\nexport const config = {\n  matcher: '/about/:path*',\n}\n\nRead more about using proxy, or refer to the proxy API reference.\n\nAPI Reference\nLearn more about Proxy\nproxy.js\nAPI reference for the proxy.js file.\nBackend for Frontend\nLearn how to use Next.js as a backend framework\nPrevious\nRoute Handlers\nNext\nDeploying\n\nWas this helpful?\n\nsupported.\nSend"
  }
]