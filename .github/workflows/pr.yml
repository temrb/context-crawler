name: Pull request workflow

on:
  pull_request:
    types: [opened, reopened, synchronize, edited]

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      CI_JOB_NUMBER: 1
    steps:
      - name: 'Checkout PR branch'
        uses: actions/checkout@v4

      - name: 'Setup Bun'
        uses: oven-sh/setup-bun@v2

      - name: 'Cache Bun dependencies'
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: 'Install dependencies'
        run: bun install --frozen-lockfile

      - name: 'Build project'
        run: bun run build

      - name: 'Run tests'
        run: bun run test

      - name: 'Check compressed size'
        uses: preactjs/compressed-size-action@v2
        with:
          pattern: "dist/**/*.{js,ts,json}"

  static-tests:
    name: Static tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    steps:
      - name: 'Checkout PR branch'
        uses: actions/checkout@v4

      - name: 'Setup Bun'
        uses: oven-sh/setup-bun@v2

      - name: 'Cache Bun dependencies'
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: 'Install dependencies'
        run: bun install --frozen-lockfile

      - name: 'Check code formatting'
        run: bun run prettier:check

  build-docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    steps:
      - name: 'Checkout PR branch'
        uses: actions/checkout@v4

      - name: 'Build Docker image'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false

  semantic-pr:
    name: Validate PR title for semantic versioning
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 'Validate PR title'
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
